name: GitHub Actions Demo
on: [pull_request]
jobs:
  # jobs 任务之间的执行策略是并发执行.
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - uses: cclauss/GitHub-Action-for-pytest@master
        with:
          args: pytest -h
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
      - run: cat /etc/issue
      - run: curl ipinfo.io/ip
      - run: cat /proc/cpuinfo
      - run: free -m
      - run: sleep 30

  Explore-GitHub-Actions-2:
    runs-on: ubuntu-18.04
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
      - run: cat /etc/issue
      - run: curl ipinfo.io/ip

  Explore-GitHub-Actions-3:
    runs-on: ubuntu-18.04
    # 依赖: Explore-GitHub-Actions 先执行完, 然后才能执行当前Job
    needs: Explore-GitHub-Actions
    strategy:
      matrix:
        include:
          - python: '3.7'
            tox_env: py37-full
          - python: '3.8'
            tox_env: py38-full
          - python: '3.9'
            tox_env: py39-full
          - python: '3.10'
            tox_env: py310-full
          - python: '3.11.0-alpha - 3.11'
            tox_env: py311-full
          - python: 'pypy-3.8'
            # Pypy is a lot slower due to jit warmup costs, so don't run the
            # "full" test config there.
            tox_env: pypy3
          - python: '3.8'
            # Docs python version must be synced with tox.ini
            tox_env: docs
    steps:
      - run: echo "matrix.python  ${{ matrix.python }}"
      - run: echo "matrix.tox_env  ${{ matrix.tox_env }}"
